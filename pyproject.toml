[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agrirag"
version = "0.1.0"
description = "Agricultural RAG System combining LightRAG and RAGAnything"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AgriRAG Team", email = "team@agrirag.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    # Core Python packages
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "asyncio-mqtt>=0.16.0",
    "aiofiles>=23.0.0",
    "httpx>=0.25.0",
    "websockets>=11.0.0",
    
    # Database dependencies
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
    "neo4j>=5.0.0",
    "redis>=5.0.0",
    "pymongo>=4.5.0",
    
    # Vector database dependencies
    "pymilvus>=2.3.0",
    "qdrant-client>=1.7.0",
    "faiss-cpu>=1.7.0",
    
    # LLM and AI dependencies
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "sentence-transformers>=2.2.0",
    
    # Document processing
    "pypdf>=3.17.0",
    "python-docx>=1.1.0",
    "openpyxl>=3.1.0",
    "pillow>=10.0.0",
    "pytesseract>=0.3.10",
    
    # Image processing
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    
    # Web framework
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "gunicorn>=21.0.0",
    
    # Utilities
    "tqdm>=4.66.0",
    "rich>=13.0.0",
    "click>=8.1.0",
    "pyyaml>=6.0.0",
    "jinja2>=3.1.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    
    # Development
    "black>=23.0.0",
    "ruff>=0.6.0",
    "mypy>=1.5.0",
    "pre-commit>=3.5.0",
]

api = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "gunicorn>=21.0.0",
]

gpu = [
    "torch>=2.0.0",
    "faiss-gpu>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/AgriRAG"
Documentation = "https://github.com/yourusername/AgriRAG#readme"
Repository = "https://github.com/yourusername/AgriRAG"
Issues = "https://github.com/yourusername/AgriRAG/issues"

[tool.hatch.build.targets.wheel]
packages = ["LightRAG", "RAGAnything"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=LightRAG",
    "--cov=RAGAnything",
    "--cov-report=term-missing",
    "--cov-report=html",
] 